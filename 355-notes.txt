notes for 355

KEY NOTE: INSTALL STANDARD ML NJ with
    sudo apt-get install smlnj

DATE sylly notes 1-8:

    shakira

    eme b57
    office hours mon,wed 330-5pm
                tus thurs, 12-1pm

    blackboard and email for stuff all the time

    python 3 is the main version for the class

    no major textbook need
    take notes and try code as we go, attendance taken

    submission through blackboard
    no team projects

    late penalty of 5% per day

    will have to write some of your own test code 
        look for edge cases, this is the most important test code
    
    MOSS IS USED, fuck that shit
    

DATE 1-8 lecture notes:
    programming language
        instructuions that can be translated to machine code
    
    what makes a prog language a language/what do you typically find in instructuions
        interpreters/compilers, functions

    what is a (computer) program
        some strings are programs
        programs == data == programs

    when does data become a program
        when it is interpreted

    what makes a GOOD prog language
        balance between power/control vs ease of use
        interpreted code is slower than code compiled to machine code (python slower than c/c++ for instance)

        
    what makes a language successful

DATE 1-10:
    recessitation is optional, but provide time if you want to go

    what makes a good programming language:
        easy to learn: basic, pascal, scheme
        powerful- easy to use once fluent (c++,common lisp, perl)
        easy to implement- basic, python
        clean and quick compiled code- fortran
        exceptionally good for a certain task- php, ruby on rails, R
        backing of a powerful sponsor- colbol, ada, visual basic, c#

    why are there so many programming languages:
        evolution- getting better over time/adjusting to use cases
        orientation for special purposes
        orientation for special hardware
            ML is special language written for making proofs for theorems?
        personal preferences
        socio-economic factors: proprietary interests, commerical advantages
    
    "functional programming"
        ml for finding list length:

            fun listLength(L) = if L = [] then 0
                else listLength( tl [L]) +1;

        -this is recursive with the base condition of 0
        -compared to a procedural program like the c/c++ equiv, its much more "natural"
        -shortness of code (generally) == easier to read


    by studying programming lanugages, you can better understand many programming lanuages in generally
    helps teach strengths and weaknesses
    
    fortran:
        designed for mathematical problems, ideal for use for purely mathematical problems

    colbol:
        designed to help solve business data or form storage and manipulation

    c:
        designed to aid in operating system implementation. where speed really matters C is great

    c++:
        designed to add object oriented programming support to c. c++ is complex but super fast. great for intensive tasks
    
    java:
        object oriented, platform independent. compiles to byte code. auto garbage collection for memory management
    
    c#: 
        microsoft's java more or less

    python:
        gap between shell and c. quick and dirty solutions

    ruby:
        true object oriented scripting language- websites like this
    
    javascript:
        scripting language used in many web related areas
    
    php:
        html embedded scripting language. serverside web dev for dynamic web pages


    ml:
        created to develop proof tactics inthe lcf theorem prover.
            call by value evaluation strategy. auto memory management.
    
    scheme: 
        multi paradigm programming language in lisp family.


        
    